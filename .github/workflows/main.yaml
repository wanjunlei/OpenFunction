name: Main CI WorkFlow

on:
  push:
    branches:
      - 'main'
      - 'release-*'
    tags:
      - 'v*'
    paths:
      - '.github/workflows/**'
      - 'apis/**'
      - 'config/bundle.yaml'
      - 'controllers/**'
      - 'hack/delete.sh'
      - 'hack/deploy.sh'
      - 'pkg/**'
      - 'Dockerfile'
      - 'main.go'
      - 'Makefile'
  pull_request:
    branches:
      - 'main'
      - 'release-*'
    paths:
      - '.github/workflows/**'
      - 'apis/**'
      - 'config/bundle.yaml'
      - 'controllers/**'
      - 'hack/delete.sh'
      - 'hack/deploy.sh'
      - 'pkg/**'
      - 'Dockerfile'
      - 'main.go'
      - 'Makefile'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: Verify and Unit Test
    env:
      GO111MODULE: "on"
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install kubebuilder-3.1.0
        run: |
          curl -L -o kubebuilder "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v3.1.0/kubebuilder_linux_amd64"
          chmod +x kubebuilder && mv kubebuilder /usr/local/bin/
      - name: Run basic test
        run: make test

      - name: Run verify crds test
        run:  make verify

  e2e_test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: E2E Tests
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        with:
          config: .github/workflows/kind/kind.yaml

      - name: Install registry
        run: |
          kubectl apply -f test/e2e/data/registry.yaml
          kubectl -n registry rollout status deployment registry --timeout=1m
          NODE_IP=$(kubectl get nodes -o jsonpath={.items[0].status.addresses[0].address})
          echo "NODE_IP=$NODE_IP" >> $GITHUB_ENV
          sudo bash -c "echo '{\"insecure-registries\":[\"$NODE_IP:32168\", \"registry.registry.svc:32168\"]}' >/etc/docker/daemon.json"
          sudo systemctl restart docker

      - name: Build and Push image
        run: |
          docker build . -t "$NODE_IP":32168/openfunction:latest -f Dockerfile --build-arg GOPROXY="https://proxy.golang.org"
          docker push "$NODE_IP":32168/openfunction:latest

      - name: Install OpenFunction
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/install.sh"
          bash "${GITHUB_WORKSPACE}"/.github/workflows/install.sh "$NODE_IP":32168/openfunction:latest

      - name: Test
        run: |
          export TEST_NAMESPACE=default
          export TEST_IMAGE_REPO=registry.registry.svc:32168
          make e2e-test

      - name: Output debug info
        if: ${{ failure() }}
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/output.sh"
          bash "${GITHUB_WORKSPACE}"/.github/workflows/output.sh
