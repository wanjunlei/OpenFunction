name: Main CI WorkFlow

on:
  push:
    branches:
      - 'main'
      - 'release-*'
    tags:
      - 'v*'
    paths:
      - '.github/workflows/**'
      - 'apis/**'
      - 'config/bundle.yaml'
      - 'controllers/**'
      - 'hack/delete.sh'
      - 'hack/deploy.sh'
      - 'pkg/**'
      - 'Dockerfile'
      - 'main.go'
      - 'Makefile'
  pull_request:
    branches:
      - 'main'
      - 'release-*'
    paths:
      - '.github/workflows/**'
      - 'apis/**'
      - 'config/bundle.yaml'
      - 'controllers/**'
      - 'hack/delete.sh'
      - 'hack/deploy.sh'
      - 'pkg/**'
      - 'Dockerfile'
      - 'main.go'
      - 'Makefile'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: Verify and Unit Test
    env:
      GO111MODULE: "on"
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install kubebuilder-3.1.0
        run: |
          curl -L -o kubebuilder "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v3.1.0/kubebuilder_linux_amd64"
          chmod +x kubebuilder && mv kubebuilder /usr/local/bin/
      - name: Run basic test
        run: make test

      - name: Run verify crds test
        run:  make verify

  e2e_test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    name: E2E Tests
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        with:
          config: .github/workflows/kind/kind.yaml

      - name: Install registry
        run: |
          mkdir certs
          openssl req -x509 -days 3650 -subj '/CN=registry.local/' -nodes -newkey rsa:2048 -keyout certs/domain.key -out certs/domain.crt
          sudo mkdir -p  /etc/docker/certs.d/registry.local
          sudo cp certs/domain.crt  /etc/docker/certs.d/registry.local/ca.crt
          NODE_IP=$(kubectl get nodes -o jsonpath={.items[0].status.addresses[0].address})
          sudo echo "$NODE_IP registry.local" >> /etc/hosts

          docker run -d \
            --restart=always \
            --name registry \
            -v "$(pwd)"/certs:/certs \
            -v /mnt/registry:/var/lib/registry \
            -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \
            -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
            -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \
            -p 443:443 \
            registry:2

      - name: Build and Push image
        run: |
          docker build . -t registry.local:443/openfunction:latest -f Dockerfile --build-arg GOPROXY="https://proxy.golang.org"
          docker push registry.local:443/openfunction:latest

      - name: Install OpenFunction
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/install.sh"
          bash "${GITHUB_WORKSPACE}"/.github/workflows/install.sh registry.local:443/openfunction:latest

      - name: Test
        run: |
          export TEST_NAMESPACE=default
          export TEST_IMAGE_REPO="$REPO"
          make e2e-test

      - name: Output debug info
        if: ${{ failure() }}
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/output.sh"
          bash "${GITHUB_WORKSPACE}"/.github/workflows/output.sh
